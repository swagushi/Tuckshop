@model PaginatedList<Tuckshop.Models.Request>

@{
    ViewData["Title"] = "Orders";
}

<h1>Orders</h1>

<p>
    <a asp-action="Create">Create Order</a>
</p>

<p>
    Orders Search: <input type="text" name="SearchString" />
    <input type="submit" value="Filter" />
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Order Name</a>
            </th>
            <th>
                Order Number
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date Ordered</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOrdered)
                </td>
                @if (User.Identity.IsAuthenticated)
                {
                    if (User.IsInRole("Admin"))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.RequestID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.RequestID">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.RequestID">Delete</a>
                        </td>
                    }


                }
               
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>